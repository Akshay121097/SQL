Q.Write an SQL query to fetch the runs scored in each over.

Table Script:
create table cricket(ball_cnt integer , run varchar2(100));
insert into cricket values(1,4);
insert into cricket values(2,0);
insert into cricket values(3,2);
insert into cricket values(4,1);
insert into cricket values(5,1);
insert into cricket values(6,3);
insert into cricket values(7,6);
insert into cricket values(8,4);
insert into cricket values(9,4);
insert into cricket values(10,0);
insert into cricket values(11,0);
insert into cricket values(12,0);
insert into cricket values(13,1);

Output:
Overs  Runs
1     11
2     14
3     1


*************************************************

Table script :

Creat table flags (code_id int, a_flag bool,b_flag bool ,c_flag bool,d_flag bool)


Insert into flags values (123,1,0,1,0),(124,1,0,0,0),(125,0,0,1,1)

Output needed :
Code  flag_name
123      a_flag
123      c_flag
124      a_flag
125      c_flag
125      d_flag


*************************************


Q.
Create table child_parent (child_id in, parent_id int , active_flag int )

Insert into child_parent(child_id, parent_id, active_flag) values (356,123,0),(374,124,0),(364,123,1),(123,123,1),(364,123,0)

Conditions :
If parent_id = child_id then take the same flag as given

If parent_id not equal to child_id

Then we have to check any of the parent id 's child_id... Have flag 1 and take that 1 as new flag

*******************************************************

Input : 

A     B     C 
1     N     N 
N     2     N
N     N     3

Output: 

A     B     C 
1     2     3

******************************************************

.Write an SQL query to find the total points scored by each pair of players.
Output must be in ascending order for each pair

Table Script:
create table teams(team1 varchar(50),team2 varchar(50),points int) 
insert into teams values('a','b',10);
insert into teams values('b','a',20);
insert into teams values('c','d',30);
insert into teams values('d','c',40);
insert into teams values('a','e',50);
insert into teams values('e','a',60);


Output must be in the same sequence.
Output:
Team1-->Team2-->Total_Point
a       b      30
a       e      110
c       d      70


Solution
select * from teams;


with cte as (select *,
case when team1<team2 then team1 else team2 end as t1,
case when team1<team2 then team2 else team1 end as t2
from teams)


select t1,t2, sum(points) as total_points
from cte 
group by 1,2

 t1 | t2 | total_points 
----+----+--------------
 a  | e  |          110
 a  | b  |           30
 c  | d  |           70
(3 rows)
